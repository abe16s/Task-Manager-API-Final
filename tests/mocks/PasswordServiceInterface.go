// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PasswordServiceInterface is an autogenerated mock type for the PasswordServiceInterface type
type PasswordServiceInterface struct {
	mock.Mock
}

// ComparePassword provides a mock function with given fields: existingPassword, userPassword
func (_m *PasswordServiceInterface) ComparePassword(existingPassword string, userPassword string) bool {
	ret := _m.Called(existingPassword, userPassword)

	if len(ret) == 0 {
		panic("no return value specified for ComparePassword")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string) bool); ok {
		r0 = rf(existingPassword, userPassword)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// HashPassword provides a mock function with given fields: password
func (_m *PasswordServiceInterface) HashPassword(password string) (string, error) {
	ret := _m.Called(password)

	if len(ret) == 0 {
		panic("no return value specified for HashPassword")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(password)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(password)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPasswordServiceInterface creates a new instance of PasswordServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPasswordServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *PasswordServiceInterface {
	mock := &PasswordServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
